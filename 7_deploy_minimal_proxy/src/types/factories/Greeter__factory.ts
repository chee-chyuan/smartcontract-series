/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Greeter, GreeterInterface } from "../Greeter";

const _abi = [
  {
    inputs: [],
    name: "greet",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_greeting",
        type: "string",
      },
    ],
    name: "setGreeting",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506107f4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063a413686214610046578063cfae321714610062578063f62d188814610080575b600080fd5b610060600480360381019061005b91906104d4565b61009c565b005b61006a610163565b604051610077919061054e565b60405180910390f35b61009a600480360381019061009591906104d4565b6101f5565b005b61014960405180606001604052806023815260200161077a60239139600080546100c5906106a7565b80601f01602080910402602001604051908101604052809291908181526020018280546100f1906106a7565b801561013e5780601f106101135761010080835404028352916020019161013e565b820191906000526020600020905b81548152906001019060200180831161012157829003601f168201915b505050505083610265565b806000908051906020019061015f9291906103c9565b5050565b606060008054610172906106a7565b80601f016020809104026020016040519081016040528092919081815260200182805461019e906106a7565b80156101eb5780601f106101c0576101008083540402835291602001916101eb565b820191906000526020600020905b8154815290600101906020018083116101ce57829003601f168201915b5050505050905090565b600160009054906101000a900460ff161561020f57600080fd5b61023160405180606001604052806022815260200161079d6022913982610304565b80600090805190602001906102479291906103c9565b5060018060006101000a81548160ff02191690831515021790555050565b6102ff83838360405160240161027d939291906105a7565b6040516020818303038152906040527f2ced7cef000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103a0565b505050565b61039c828260405160240161031a929190610570565b6040516020818303038152906040527f4b5c4277000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506103a0565b5050565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b8280546103d5906106a7565b90600052602060002090601f0160209004810192826103f7576000855561043e565b82601f1061041057805160ff191683800117855561043e565b8280016001018555821561043e579182015b8281111561043d578251825591602001919060010190610422565b5b50905061044b919061044f565b5090565b5b80821115610468576000816000905550600101610450565b5090565b600061047f61047a84610618565b6105f3565b90508281526020810184848401111561049757600080fd5b6104a2848285610665565b509392505050565b600082601f8301126104bb57600080fd5b81356104cb84826020860161046c565b91505092915050565b6000602082840312156104e657600080fd5b600082013567ffffffffffffffff81111561050057600080fd5b61050c848285016104aa565b91505092915050565b600061052082610649565b61052a8185610654565b935061053a818560208601610674565b61054381610768565b840191505092915050565b600060208201905081810360008301526105688184610515565b905092915050565b6000604082019050818103600083015261058a8185610515565b9050818103602083015261059e8184610515565b90509392505050565b600060608201905081810360008301526105c18186610515565b905081810360208301526105d58185610515565b905081810360408301526105e98184610515565b9050949350505050565b60006105fd61060e565b905061060982826106d9565b919050565b6000604051905090565b600067ffffffffffffffff82111561063357610632610739565b5b61063c82610768565b9050602081019050919050565b600081519050919050565b600082825260208201905092915050565b82818337600083830152505050565b60005b83811015610692578082015181840152602081019050610677565b838111156106a1576000848401525b50505050565b600060028204905060018216806106bf57607f821691505b602082108114156106d3576106d261070a565b5b50919050565b6106e282610768565b810181811067ffffffffffffffff8211171561070157610700610739565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f830116905091905056fe4368616e67696e67206772656574696e672066726f6d202725732720746f20272573274465706c6f79696e67206120477265657465722077697468206772656574696e673aa26469706673582212209be4777679354e524e4be9a6a60f27cb616f428a0d3702b99b6d74a2143ae8d464736f6c63430008040033";

export class Greeter__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Greeter> {
    return super.deploy(overrides || {}) as Promise<Greeter>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Greeter {
    return super.attach(address) as Greeter;
  }
  connect(signer: Signer): Greeter__factory {
    return super.connect(signer) as Greeter__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): GreeterInterface {
    return new utils.Interface(_abi) as GreeterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Greeter {
    return new Contract(address, _abi, signerOrProvider) as Greeter;
  }
}
