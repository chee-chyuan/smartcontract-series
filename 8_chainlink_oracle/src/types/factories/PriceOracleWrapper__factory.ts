/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  PriceOracleWrapper,
  PriceOracleWrapperInterface,
} from "../PriceOracleWrapper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IExternalOracle",
        name: "_externalOracle",
        type: "address",
      },
      {
        internalType: "int256",
        name: "_oracleDecimalPlaces",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "_usdDecimalPlaces",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "addr",
        type: "address",
      },
    ],
    name: "NewExternalOracle",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "dp",
        type: "int256",
      },
    ],
    name: "SetOracleDecimalPlaces",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "int256",
        name: "dp",
        type: "int256",
      },
    ],
    name: "SetUsdDecimalPlaces",
    type: "event",
  },
  {
    inputs: [],
    name: "getExternalOracle",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_usdPrice",
        type: "uint256",
      },
    ],
    name: "getPrice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "oracleDecimalPlaces",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "contract IExternalOracle",
        name: "_externalOracle",
        type: "address",
      },
    ],
    name: "setExternalOracle",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_dp",
        type: "int256",
      },
    ],
    name: "setOracleDecimalPlaces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "int256",
        name: "_dp",
        type: "int256",
      },
    ],
    name: "setUsdDecimalPlaces",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdDecimalPlaces",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b50604051620012973803806200129783398181016040528101906200003791906200026c565b620000576200004b6200017260201b60201c565b6200017a60201b60201c565b82600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555081600281905550806003819055506002547fb89524a62433ac634b8c81002dab1540f59553673102d9d1904454e1328edd6460405160405180910390a26003547f70cd3e2b1815fbf0f97d1be30b1a98a458c9bcf185e9e0a25cec1643d68f7b6860405160405180910390a2600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6838429da186106a3c4052624f567cb97fcc11d54ede8703ad76fd8465e7e6f760405160405180910390a250505062000348565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200024f8162000314565b92915050565b60008151905062000266816200032e565b92915050565b6000806000606084860312156200028257600080fd5b600062000292868287016200023e565b9350506020620002a58682870162000255565b9250506040620002b88682870162000255565b9150509250925092565b6000620002cf82620002f4565b9050919050565b6000620002e382620002c2565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6200031f81620002d6565b81146200032b57600080fd5b50565b6200033981620002ea565b81146200034557600080fd5b50565b610f3f80620003586000396000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80638da5cb5b116100665780638da5cb5b14610121578063ac8616731461013f578063af7fd0c71461015b578063e757223014610179578063f2fde38b146101a95761009e565b806306d53b89146100a357806319ae0a4c146100c1578063398e7a5d146100df5780633c8ada62146100fb578063715018a614610117575b600080fd5b6100ab6101c5565b6040516100b891906109ac565b60405180910390f35b6100c96101ef565b6040516100d691906109c7565b60405180910390f35b6100f960048036038101906100f491906108be565b6101f5565b005b610115600480360381019061011091906108be565b6102aa565b005b61011f61035f565b005b6101296103e7565b60405161013691906109ac565b60405180910390f35b61015960048036038101906101549190610895565b610410565b005b610163610535565b60405161017091906109c7565b60405180910390f35b610193600480360381019061018e9190610910565b61053b565b6040516101a09190610a22565b60405180910390f35b6101c360048036038101906101be919061086c565b61063f565b005b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60025481565b6101fd610737565b73ffffffffffffffffffffffffffffffffffffffff1661021b6103e7565b73ffffffffffffffffffffffffffffffffffffffff1614610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610a02565b60405180910390fd5b806003819055506003547f70cd3e2b1815fbf0f97d1be30b1a98a458c9bcf185e9e0a25cec1643d68f7b6860405160405180910390a250565b6102b2610737565b73ffffffffffffffffffffffffffffffffffffffff166102d06103e7565b73ffffffffffffffffffffffffffffffffffffffff1614610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d90610a02565b60405180910390fd5b806002819055506002547fb89524a62433ac634b8c81002dab1540f59553673102d9d1904454e1328edd6460405160405180910390a250565b610367610737565b73ffffffffffffffffffffffffffffffffffffffff166103856103e7565b73ffffffffffffffffffffffffffffffffffffffff16146103db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103d290610a02565b60405180910390fd5b6103e5600061073f565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610418610737565b73ffffffffffffffffffffffffffffffffffffffff166104366103e7565b73ffffffffffffffffffffffffffffffffffffffff161461048c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161048390610a02565b60405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f6838429da186106a3c4052624f567cb97fcc11d54ede8703ad76fd8465e7e6f760405160405180910390a250565b60035481565b60008060126002546003546105509190610cde565b61055a9190610a4e565b90506000811361056957600080fd5b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166350d25bcd6040518163ffffffff1660e01b815260040160206040518083038186803b1580156105d357600080fd5b505afa1580156105e7573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060b91906108e7565b905060008183600a61061d9190610b66565b866106289190610c84565b6106329190610ae2565b9050809350505050919050565b610647610737565b73ffffffffffffffffffffffffffffffffffffffff166106656103e7565b73ffffffffffffffffffffffffffffffffffffffff16146106bb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106b290610a02565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561072b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610722906109e2565b60405180910390fd5b6107348161073f565b50565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b60008135905061081281610ead565b92915050565b60008135905061082781610ec4565b92915050565b60008135905061083c81610edb565b92915050565b60008151905061085181610edb565b92915050565b60008135905061086681610ef2565b92915050565b60006020828403121561087e57600080fd5b600061088c84828501610803565b91505092915050565b6000602082840312156108a757600080fd5b60006108b584828501610818565b91505092915050565b6000602082840312156108d057600080fd5b60006108de8482850161082d565b91505092915050565b6000602082840312156108f957600080fd5b600061090784828501610842565b91505092915050565b60006020828403121561092257600080fd5b600061093084828501610857565b91505092915050565b61094281610d72565b82525050565b61095181610d96565b82525050565b6000610964602683610a3d565b915061096f82610e35565b604082019050919050565b6000610987602083610a3d565b915061099282610e84565b602082019050919050565b6109a681610dc0565b82525050565b60006020820190506109c16000830184610939565b92915050565b60006020820190506109dc6000830184610948565b92915050565b600060208201905081810360008301526109fb81610957565b9050919050565b60006020820190508181036000830152610a1b8161097a565b9050919050565b6000602082019050610a37600083018461099d565b92915050565b600082825260208201905092915050565b6000610a5982610d96565b9150610a6483610d96565b9250817f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03831360008312151615610a9f57610a9e610dca565b5b817f8000000000000000000000000000000000000000000000000000000000000000038312600083121615610ad757610ad6610dca565b5b828201905092915050565b6000610aed82610dc0565b9150610af883610dc0565b925082610b0857610b07610df9565b5b828204905092915050565b6000808291508390505b6001851115610b5d57808604811115610b3957610b38610dca565b5b6001851615610b485780820291505b8081029050610b5685610e28565b9450610b1d565b94509492505050565b6000610b7182610dc0565b9150610b7c83610dc0565b9250610ba97fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8484610bb1565b905092915050565b600082610bc15760019050610c7d565b81610bcf5760009050610c7d565b8160018114610be55760028114610bef57610c1e565b6001915050610c7d565b60ff841115610c0157610c00610dca565b5b8360020a915084821115610c1857610c17610dca565b5b50610c7d565b5060208310610133831016604e8410600b8410161715610c535782820a905083811115610c4e57610c4d610dca565b5b610c7d565b610c608484846001610b13565b92509050818404811115610c7757610c76610dca565b5b81810290505b9392505050565b6000610c8f82610dc0565b9150610c9a83610dc0565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610cd357610cd2610dca565b5b828202905092915050565b6000610ce982610d96565b9150610cf483610d96565b9250827f800000000000000000000000000000000000000000000000000000000000000001821260008412151615610d2f57610d2e610dca565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018213600084121615610d6757610d66610dca565b5b828203905092915050565b6000610d7d82610da0565b9050919050565b6000610d8f82610d72565b9050919050565b6000819050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008160011c9050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b610eb681610d72565b8114610ec157600080fd5b50565b610ecd81610d84565b8114610ed857600080fd5b50565b610ee481610d96565b8114610eef57600080fd5b50565b610efb81610dc0565b8114610f0657600080fd5b5056fea2646970667358221220c73c1805fdc5266a0f7fe2cb7e4afb5f737ca3994f837f4c3508526ca6060f5a64736f6c63430008040033";

export class PriceOracleWrapper__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _externalOracle: string,
    _oracleDecimalPlaces: BigNumberish,
    _usdDecimalPlaces: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<PriceOracleWrapper> {
    return super.deploy(
      _externalOracle,
      _oracleDecimalPlaces,
      _usdDecimalPlaces,
      overrides || {}
    ) as Promise<PriceOracleWrapper>;
  }
  getDeployTransaction(
    _externalOracle: string,
    _oracleDecimalPlaces: BigNumberish,
    _usdDecimalPlaces: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _externalOracle,
      _oracleDecimalPlaces,
      _usdDecimalPlaces,
      overrides || {}
    );
  }
  attach(address: string): PriceOracleWrapper {
    return super.attach(address) as PriceOracleWrapper;
  }
  connect(signer: Signer): PriceOracleWrapper__factory {
    return super.connect(signer) as PriceOracleWrapper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PriceOracleWrapperInterface {
    return new utils.Interface(_abi) as PriceOracleWrapperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PriceOracleWrapper {
    return new Contract(address, _abi, signerOrProvider) as PriceOracleWrapper;
  }
}
