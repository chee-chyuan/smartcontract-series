/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { TestContract, TestContractInterface } from "../TestContract";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_init",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "decrement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "get",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "increment",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161042738038061042783398181016040528101906100329190610054565b806000819055505061009e565b60008151905061004e81610087565b92915050565b60006020828403121561006657600080fd5b60006100748482850161003f565b91505092915050565b6000819050919050565b6100908161007d565b811461009b57600080fd5b50565b61037a806100ad6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632baeceb7146100465780636d4ce63c14610050578063d09de08a1461006e575b600080fd5b61004e610078565b005b610058610091565b604051610065919061021d565b60405180910390f35b61007661009a565b005b60008081548092919061008a90610291565b9190505550565b60008054905090565b6100d86040518060400160405280600581526020017f68656c6c6f0000000000000000000000000000000000000000000000000000008152506100f1565b6000808154809291906100ea906102bb565b9190505550565b6101878160405160240161010591906101fb565b6040516020818303038152906040527f41304fac000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505061018a565b50565b60008151905060006a636f6e736f6c652e6c6f679050602083016000808483855afa5050505050565b60006101be82610238565b6101c88185610243565b93506101d881856020860161025e565b6101e181610333565b840191505092915050565b6101f581610254565b82525050565b6000602082019050818103600083015261021581846101b3565b905092915050565b600060208201905061023260008301846101ec565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050919050565b60005b8381101561027c578082015181840152602081019050610261565b8381111561028b576000848401525b50505050565b600061029c82610254565b915060008214156102b0576102af610304565b5b600182039050919050565b60006102c682610254565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156102f9576102f8610304565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000601f19601f830116905091905056fea2646970667358221220d62f505425dd86fbf634c472e9b1e8ac28aea57348721c2b60a5c7344ad3816064736f6c63430008040033";

export class TestContract__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _init: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<TestContract> {
    return super.deploy(_init, overrides || {}) as Promise<TestContract>;
  }
  getDeployTransaction(
    _init: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_init, overrides || {});
  }
  attach(address: string): TestContract {
    return super.attach(address) as TestContract;
  }
  connect(signer: Signer): TestContract__factory {
    return super.connect(signer) as TestContract__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): TestContractInterface {
    return new utils.Interface(_abi) as TestContractInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): TestContract {
    return new Contract(address, _abi, signerOrProvider) as TestContract;
  }
}
