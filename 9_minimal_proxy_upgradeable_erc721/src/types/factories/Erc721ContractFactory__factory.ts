/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Erc721ContractFactory,
  Erc721ContractFactoryInterface,
} from "../Erc721ContractFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "CreatedNewCloneContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_cloneAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_cloneExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_tokenIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_cloneAddress",
        type: "address",
      },
    ],
    name: "consumeNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    name: "createClone",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cloneAddress",
        type: "address",
      },
    ],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPaused",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalUnpaused",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "transferEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cloneAddress",
        type: "address",
      },
    ],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200192c3803806200192c833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b611720806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106100ff5760003560e01c80636a6278421161009757806384c4bd4b1161006657806384c4bd4b146102705780638da5cb5b1461028e578063d784d426146102ac578063f2fde38b146102c8576100ff565b80636a627842146101fe578063715018a61461021a5780637367d9e01461022457806376a67a5114610254576100ff565b806349f9c0e4116100d357806349f9c0e41461018c5780634d2ac380146101a857806357b001f9146101c45780635c60da1b146101e0576100ff565b8062eea8a21461010457806315347be414610122578063175453e0146101525780632bf7dcc41461016e575b600080fd5b61010c6102e4565b604051610119919061138a565b60405180910390f35b61013c6004803603810190610137919061106a565b6102ea565b604051610149919061124f565b60405180910390f35b61016c60048036038101906101679190610feb565b61031d565b005b610176610559565b604051610183919061138a565b60405180910390f35b6101a660048036038101906101a19190611093565b61055f565b005b6101c260048036038101906101bd9190611093565b6105df565b005b6101de60048036038101906101d99190610fc2565b61065f565b005b6101e8610817565b6040516101f5919061124f565b60405180910390f35b61021860048036038101906102139190610fc2565b61083d565b005b610222610840565b005b61023e60048036038101906102399190610fc2565b6108c8565b60405161024b919061126a565b60405180910390f35b61026e60048036038101906102699190610fc2565b6108e8565b005b610278610aa0565b604051610285919061138a565b60405180910390f35b610296610aac565b6040516102a3919061124f565b60405180910390f35b6102c660048036038101906102c19190610fc2565b610ad5565b005b6102e260048036038101906102dd9190610fc2565b610b95565b005b60045481565b60026020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610325610c8d565b73ffffffffffffffffffffffffffffffffffffffff16610343610aac565b73ffffffffffffffffffffffffffffffffffffffff1614610399576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103909061132a565b60405180910390fd5b60006103c6600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610c95565b905060008173ffffffffffffffffffffffffffffffffffffffff168585856040516024016103f693929190611285565b6040516020818303038152906040527fb119490e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516104809190611238565b6000604051808303816000865af19150503d80600081146104bd576040519150601f19603f3d011682016040523d82523d6000602084013e6104c2565b606091505b5050905080610506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104fd9061136a565b60405180910390fd5b61050f82610d6a565b8173ffffffffffffffffffffffffffffffffffffffff167f532e33e26b328a15d92390fcf2bc515e3670105ea3a848159f326131fdca55c560405160405180910390a25050505050565b60055481565b610567610c8d565b73ffffffffffffffffffffffffffffffffffffffff16610585610aac565b73ffffffffffffffffffffffffffffffffffffffff16146105db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105d29061132a565b60405180910390fd5b5050565b6105e7610c8d565b73ffffffffffffffffffffffffffffffffffffffff16610605610aac565b73ffffffffffffffffffffffffffffffffffffffff161461065b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106529061132a565b60405180910390fd5b5050565b610667610c8d565b73ffffffffffffffffffffffffffffffffffffffff16610685610aac565b73ffffffffffffffffffffffffffffffffffffffff16146106db576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106d29061132a565b60405180910390fd5b6106e481610e42565b60008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f3f4ba83a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161078d9190611238565b6000604051808303816000865af19150503d80600081146107ca576040519150601f19603f3d011682016040523d82523d6000602084013e6107cf565b606091505b5050905080610813576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161080a906112ea565b60405180910390fd5b5050565b600a60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b610848610c8d565b73ffffffffffffffffffffffffffffffffffffffff16610866610aac565b73ffffffffffffffffffffffffffffffffffffffff16146108bc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108b39061132a565b60405180910390fd5b6108c66000610e45565b565b60036020528060005260406000206000915054906101000a900460ff1681565b6108f0610c8d565b73ffffffffffffffffffffffffffffffffffffffff1661090e610aac565b73ffffffffffffffffffffffffffffffffffffffff1614610964576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161095b9061132a565b60405180910390fd5b61096d81610f09565b60008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f8456cb59000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050604051610a169190611238565b6000604051808303816000865af19150503d8060008114610a53576040519150601f19603f3d011682016040523d82523d6000602084013e610a58565b606091505b5050905080610a9c576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a939061134a565b60405180910390fd5b5050565b60018060000154905081565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610add610c8d565b73ffffffffffffffffffffffffffffffffffffffff16610afb610aac565b73ffffffffffffffffffffffffffffffffffffffff1614610b51576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b489061132a565b60405180910390fd5b80600a60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610b9d610c8d565b73ffffffffffffffffffffffffffffffffffffffff16610bbb610aac565b73ffffffffffffffffffffffffffffffffffffffff1614610c11576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c089061132a565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c81576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c78906112ca565b60405180910390fd5b610c8a81610e45565b50565b600033905090565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610d65576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610d5c9061130a565b60405180910390fd5b919050565b60056000815480929190610d7d906114e8565b91905055508060026000610d916001610f0c565b815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550610e3f6001610f1a565b50565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b600081600001549050919050565b6001816000016000828254019250508190555050565b6000610f43610f3e846113ca565b6113a5565b905082815260208101848484011115610f5b57600080fd5b610f66848285611475565b509392505050565b600081359050610f7d816116bc565b92915050565b600082601f830112610f9457600080fd5b8135610fa4848260208601610f30565b91505092915050565b600081359050610fbc816116d3565b92915050565b600060208284031215610fd457600080fd5b6000610fe284828501610f6e565b91505092915050565b60008060006060848603121561100057600080fd5b600084013567ffffffffffffffff81111561101a57600080fd5b61102686828701610f83565b935050602084013567ffffffffffffffff81111561104357600080fd5b61104f86828701610f83565b925050604061106086828701610fad565b9150509250925092565b60006020828403121561107c57600080fd5b600061108a84828501610fad565b91505092915050565b600080604083850312156110a657600080fd5b60006110b485828601610fad565b92505060206110c585828601610f6e565b9150509250929050565b6110d88161142d565b82525050565b6110e78161143f565b82525050565b60006110f8826113fb565b6111028185611411565b9350611112818560208601611484565b80840191505092915050565b600061112982611406565b611133818561141c565b9350611143818560208601611484565b61114c8161158f565b840191505092915050565b600061116460268361141c565b915061116f826115a0565b604082019050919050565b600061118760178361141c565b9150611192826115ef565b602082019050919050565b60006111aa60168361141c565b91506111b582611618565b602082019050919050565b60006111cd60208361141c565b91506111d882611641565b602082019050919050565b60006111f060158361141c565b91506111fb8261166a565b602082019050919050565b600061121360158361141c565b915061121e82611693565b602082019050919050565b6112328161146b565b82525050565b600061124482846110ed565b915081905092915050565b600060208201905061126460008301846110cf565b92915050565b600060208201905061127f60008301846110de565b92915050565b6000606082019050818103600083015261129f818661111e565b905081810360208301526112b3818561111e565b90506112c26040830184611229565b949350505050565b600060208201905081810360008301526112e381611157565b9050919050565b600060208201905081810360008301526113038161117a565b9050919050565b600060208201905081810360008301526113238161119d565b9050919050565b60006020820190508181036000830152611343816111c0565b9050919050565b60006020820190508181036000830152611363816111e3565b9050919050565b6000602082019050818103600083015261138381611206565b9050919050565b600060208201905061139f6000830184611229565b92915050565b60006113af6113c0565b90506113bb82826114b7565b919050565b6000604051905090565b600067ffffffffffffffff8211156113e5576113e4611560565b5b6113ee8261158f565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006114388261144b565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b838110156114a2578082015181840152602081019050611487565b838111156114b1576000848401525b50505050565b6114c08261158f565b810181811067ffffffffffffffff821117156114df576114de611560565b5b80604052505050565b60006114f38261146b565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82141561152657611525611531565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f756e706175736520697320756e7375636365737366756c000000000000000000600082015250565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f706175736520697320756e7375636365737366756c0000000000000000000000600082015250565b7f636c6f6e6520697320756e7375636365737366756c0000000000000000000000600082015250565b6116c58161142d565b81146116d057600080fd5b50565b6116dc8161146b565b81146116e757600080fd5b5056fea2646970667358221220fb74457e47a72c8b1259eceba629d7b590a7265cb1a8af159c05be782dce395964736f6c63430008040033";

export class Erc721ContractFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Erc721ContractFactory> {
    return super.deploy(
      _implementation,
      overrides || {}
    ) as Promise<Erc721ContractFactory>;
  }
  getDeployTransaction(
    _implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  attach(address: string): Erc721ContractFactory {
    return super.attach(address) as Erc721ContractFactory;
  }
  connect(signer: Signer): Erc721ContractFactory__factory {
    return super.connect(signer) as Erc721ContractFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Erc721ContractFactoryInterface {
    return new utils.Interface(_abi) as Erc721ContractFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc721ContractFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as Erc721ContractFactory;
  }
}
