/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  Erc721ContractFactory,
  Erc721ContractFactoryInterface,
} from "../Erc721ContractFactory";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "CreatedNewCloneContract",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_cloneAddress",
        type: "address",
      },
    ],
    name: "consumeNft",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "string",
        name: "_symbol",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_maxSupply",
        type: "uint256",
      },
    ],
    name: "createClone",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "implementation",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cloneAddress",
        type: "address",
      },
    ],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_implementation",
        type: "address",
      },
    ],
    name: "setImplementation",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPaused",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalUnpaused",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
    ],
    name: "transferEth",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_cloneAddress",
        type: "address",
      },
    ],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200164238038062001642833981810160405281019062000037919062000182565b620000576200004b6200009f60201b60201c565b620000a760201b60201c565b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050620001fc565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000815190506200017c81620001e2565b92915050565b6000602082840312156200019557600080fd5b6000620001a5848285016200016b565b91505092915050565b6000620001bb82620001c2565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b620001ed81620001ae565b8114620001f957600080fd5b50565b611436806200020c6000396000f3fe608060405234801561001057600080fd5b50600436106100ce5760003560e01c80635c60da1b1161008c57806376a67a511161006657806376a67a51146101c35780638da5cb5b146101df578063d784d426146101fd578063f2fde38b14610219576100ce565b80635c60da1b1461017f5780636a6278421461019d578063715018a6146101b9576100ce565b8062eea8a2146100d3578063175453e0146100f15780632bf7dcc41461010d57806349f9c0e41461012b5780634d2ac3801461014757806357b001f914610163575b600080fd5b6100db610235565b6040516100e89190611124565b60405180910390f35b61010b60048036038101906101069190610dd8565b61023b565b005b61011561046e565b6040516101229190611124565b60405180910390f35b61014560048036038101906101409190610e57565b610474565b005b610161600480360381019061015c9190610e57565b6104f4565b005b61017d60048036038101906101789190610daf565b610574565b005b61018761072c565b6040516101949190611004565b60405180910390f35b6101b760048036038101906101b29190610daf565b610752565b005b6101c1610755565b005b6101dd60048036038101906101d89190610daf565b6107dd565b005b6101e7610995565b6040516101f49190611004565b60405180910390f35b61021760048036038101906102129190610daf565b6109be565b005b610233600480360381019061022e9190610daf565b610a7e565b005b60035481565b610243610b76565b73ffffffffffffffffffffffffffffffffffffffff16610261610995565b73ffffffffffffffffffffffffffffffffffffffff16146102b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102ae906110c4565b60405180910390fd5b60006102e4600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610b7e565b905060008173ffffffffffffffffffffffffffffffffffffffff168585856040516024016103149392919061101f565b6040516020818303038152906040527fb119490e000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161039e9190610fed565b6000604051808303816000865af19150503d80600081146103db576040519150601f19603f3d011682016040523d82523d6000602084013e6103e0565b606091505b5050905080610424576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161041b90611104565b60405180910390fd5b8173ffffffffffffffffffffffffffffffffffffffff167f532e33e26b328a15d92390fcf2bc515e3670105ea3a848159f326131fdca55c560405160405180910390a25050505050565b60045481565b61047c610b76565b73ffffffffffffffffffffffffffffffffffffffff1661049a610995565b73ffffffffffffffffffffffffffffffffffffffff16146104f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104e7906110c4565b60405180910390fd5b5050565b6104fc610b76565b73ffffffffffffffffffffffffffffffffffffffff1661051a610995565b73ffffffffffffffffffffffffffffffffffffffff1614610570576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610567906110c4565b60405180910390fd5b5050565b61057c610b76565b73ffffffffffffffffffffffffffffffffffffffff1661059a610995565b73ffffffffffffffffffffffffffffffffffffffff16146105f0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105e7906110c4565b60405180910390fd5b6105f981610c53565b60008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f3f4ba83a000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff83818316178352505050506040516106a29190610fed565b6000604051808303816000865af19150503d80600081146106df576040519150601f19603f3d011682016040523d82523d6000602084013e6106e4565b606091505b5050905080610728576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071f90611084565b60405180910390fd5b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b50565b61075d610b76565b73ffffffffffffffffffffffffffffffffffffffff1661077b610995565b73ffffffffffffffffffffffffffffffffffffffff16146107d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c8906110c4565b60405180910390fd5b6107db6000610c56565b565b6107e5610b76565b73ffffffffffffffffffffffffffffffffffffffff16610803610995565b73ffffffffffffffffffffffffffffffffffffffff1614610859576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610850906110c4565b60405180910390fd5b61086281610d1a565b60008173ffffffffffffffffffffffffffffffffffffffff166040516024016040516020818303038152906040527f8456cb59000000000000000000000000000000000000000000000000000000007bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19166020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff838183161783525050505060405161090b9190610fed565b6000604051808303816000865af19150503d8060008114610948576040519150601f19603f3d011682016040523d82523d6000602084013e61094d565b606091505b5050905080610991576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610988906110e4565b60405180910390fd5b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6109c6610b76565b73ffffffffffffffffffffffffffffffffffffffff166109e4610995565b73ffffffffffffffffffffffffffffffffffffffff1614610a3a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a31906110c4565b60405180910390fd5b80600960006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610a86610b76565b73ffffffffffffffffffffffffffffffffffffffff16610aa4610995565b73ffffffffffffffffffffffffffffffffffffffff1614610afa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610af1906110c4565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610b6a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6190611064565b60405180910390fd5b610b7381610c56565b50565b600033905090565b60006040517f3d602d80600a3d3981f3363d3d373d3d3d363d7300000000000000000000000081528260601b60148201527f5af43d82803e903d91602b57fd5bf3000000000000000000000000000000000060288201526037816000f0915050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c45906110a4565b60405180910390fd5b919050565b50565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b50565b6000610d30610d2b84611164565b61113f565b905082815260208101848484011115610d4857600080fd5b610d53848285611203565b509392505050565b600081359050610d6a816113d2565b92915050565b600082601f830112610d8157600080fd5b8135610d91848260208601610d1d565b91505092915050565b600081359050610da9816113e9565b92915050565b600060208284031215610dc157600080fd5b6000610dcf84828501610d5b565b91505092915050565b600080600060608486031215610ded57600080fd5b600084013567ffffffffffffffff811115610e0757600080fd5b610e1386828701610d70565b935050602084013567ffffffffffffffff811115610e3057600080fd5b610e3c86828701610d70565b9250506040610e4d86828701610d9a565b9150509250925092565b60008060408385031215610e6a57600080fd5b6000610e7885828601610d9a565b9250506020610e8985828601610d5b565b9150509250929050565b610e9c816111c7565b82525050565b6000610ead82611195565b610eb781856111ab565b9350610ec7818560208601611212565b80840191505092915050565b6000610ede826111a0565b610ee881856111b6565b9350610ef8818560208601611212565b610f01816112a5565b840191505092915050565b6000610f196026836111b6565b9150610f24826112b6565b604082019050919050565b6000610f3c6017836111b6565b9150610f4782611305565b602082019050919050565b6000610f5f6016836111b6565b9150610f6a8261132e565b602082019050919050565b6000610f826020836111b6565b9150610f8d82611357565b602082019050919050565b6000610fa56015836111b6565b9150610fb082611380565b602082019050919050565b6000610fc86015836111b6565b9150610fd3826113a9565b602082019050919050565b610fe7816111f9565b82525050565b6000610ff98284610ea2565b915081905092915050565b60006020820190506110196000830184610e93565b92915050565b600060608201905081810360008301526110398186610ed3565b9050818103602083015261104d8185610ed3565b905061105c6040830184610fde565b949350505050565b6000602082019050818103600083015261107d81610f0c565b9050919050565b6000602082019050818103600083015261109d81610f2f565b9050919050565b600060208201905081810360008301526110bd81610f52565b9050919050565b600060208201905081810360008301526110dd81610f75565b9050919050565b600060208201905081810360008301526110fd81610f98565b9050919050565b6000602082019050818103600083015261111d81610fbb565b9050919050565b60006020820190506111396000830184610fde565b92915050565b600061114961115a565b90506111558282611245565b919050565b6000604051905090565b600067ffffffffffffffff82111561117f5761117e611276565b5b611188826112a5565b9050602081019050919050565b600081519050919050565b600081519050919050565b600081905092915050565b600082825260208201905092915050565b60006111d2826111d9565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b82818337600083830152505050565b60005b83811015611230578082015181840152602081019050611215565b8381111561123f576000848401525b50505050565b61124e826112a5565b810181811067ffffffffffffffff8211171561126d5761126c611276565b5b80604052505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000601f19601f8301169050919050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f756e706175736520697320756e7375636365737366756c000000000000000000600082015250565b7f455243313136373a20637265617465206661696c656400000000000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b7f706175736520697320756e7375636365737366756c0000000000000000000000600082015250565b7f636c6f6e6520697320756e7375636365737366756c0000000000000000000000600082015250565b6113db816111c7565b81146113e657600080fd5b50565b6113f2816111f9565b81146113fd57600080fd5b5056fea2646970667358221220294e40baea33ba3b516192a4db6d182e18eddde04f3ebc55b044b2f1ef19336d64736f6c63430008040033";

export class Erc721ContractFactory__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Erc721ContractFactory> {
    return super.deploy(
      _implementation,
      overrides || {}
    ) as Promise<Erc721ContractFactory>;
  }
  getDeployTransaction(
    _implementation: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_implementation, overrides || {});
  }
  attach(address: string): Erc721ContractFactory {
    return super.attach(address) as Erc721ContractFactory;
  }
  connect(signer: Signer): Erc721ContractFactory__factory {
    return super.connect(signer) as Erc721ContractFactory__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): Erc721ContractFactoryInterface {
    return new utils.Interface(_abi) as Erc721ContractFactoryInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Erc721ContractFactory {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as Erc721ContractFactory;
  }
}
