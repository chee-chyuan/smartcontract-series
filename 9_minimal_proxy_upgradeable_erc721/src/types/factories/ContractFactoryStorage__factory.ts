/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ContractFactoryStorage,
  ContractFactoryStorageInterface,
} from "../ContractFactoryStorage";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_cloneAddressIds",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_cloneAddresses",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_cloneExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_pausedList",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_tokenIdCounter",
    outputs: [
      {
        internalType: "uint256",
        name: "_value",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "_unpausedList",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalPaused",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalUnpaused",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610455806100206000396000f3fe608060405234801561001057600080fd5b50600436106100875760003560e01c80637367d9e01161005b5780637367d9e014610128578063806eb5ec1461015857806384c4bd4b14610188578063cfaa33cf146101a657610087565b8062eea8a21461008c57806315347be4146100aa5780632bf7dcc4146100da578063466b724a146100f8575b600080fd5b6100946101d6565b6040516100a1919061038e565b60405180910390f35b6100c460048036038101906100bf9190610302565b6101e3565b6040516100d19190610358565b60405180910390f35b6100e2610216565b6040516100ef919061038e565b60405180910390f35b610112600480360381019061010d9190610302565b610223565b60405161011f919061038e565b60405180910390f35b610142600480360381019061013d91906102d9565b610247565b60405161014f9190610373565b60405180910390f35b610172600480360381019061016d9190610302565b610267565b60405161017f919061038e565b60405180910390f35b61019061028b565b60405161019d919061038e565b60405180910390f35b6101c060048036038101906101bb91906102d9565b610297565b6040516101cd919061038e565b60405180910390f35b6000600680549050905090565b60016020528060005260406000206000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000600780549050905090565b6007818154811061023357600080fd5b906000526020600020016000915090505481565b60036020528060005260406000206000915054906101000a900460ff1681565b6006818154811061027757600080fd5b906000526020600020016000915090505481565b60008060000154905081565b60026020528060005260406000206000915090505481565b6000813590506102be816103f1565b92915050565b6000813590506102d381610408565b92915050565b6000602082840312156102eb57600080fd5b60006102f9848285016102af565b91505092915050565b60006020828403121561031457600080fd5b6000610322848285016102c4565b91505092915050565b610334816103a9565b82525050565b610343816103bb565b82525050565b610352816103e7565b82525050565b600060208201905061036d600083018461032b565b92915050565b6000602082019050610388600083018461033a565b92915050565b60006020820190506103a36000830184610349565b92915050565b60006103b4826103c7565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b6103fa816103a9565b811461040557600080fd5b50565b610411816103e7565b811461041c57600080fd5b5056fea2646970667358221220cab09f551fe4328266da5055b22a8f6df54723b65ca548dd1953cf7a4fe59f0f64736f6c63430008040033";

export class ContractFactoryStorage__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractFactoryStorage> {
    return super.deploy(overrides || {}) as Promise<ContractFactoryStorage>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ContractFactoryStorage {
    return super.attach(address) as ContractFactoryStorage;
  }
  connect(signer: Signer): ContractFactoryStorage__factory {
    return super.connect(signer) as ContractFactoryStorage__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ContractFactoryStorageInterface {
    return new utils.Interface(_abi) as ContractFactoryStorageInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ContractFactoryStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ContractFactoryStorage;
  }
}
